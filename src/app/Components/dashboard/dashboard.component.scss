.example-container {
    display: flex;
    flex-direction: column;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
  }
  .first{
   margin-left: 120px;
  // border-style: outset;
  // border-radius: 5px;
   //border-width: 10px;
   
  }
  .searchbar{
    height: 70%;
    width: 35%;
    display: flex;
    border: 0px solid red;
    border-radius: 4px;
    margin-right: 40px;
    margin-left: 160px;
    align-items: center;
    background-color: rgba(220, 220, 220, 0.452);
    box-shadow: 5px 5px 5px  rgba(69, 68, 68, 0.183);
  }
  .icon1{
    height: 55%;
    width: 5%;
    color: grey;
    display: flex;
    border: 0px solid blue;
    justify-content: center;
    align-items: center;
    position: relative;
    left: 10px;
  }
  .topnav{
    width: 25px;
    margin-left: 50px;
   //padding: 10px;
   //padding-left: 20px;
  }
  .topside{
   // margin-right: 60px;
    margin-left: 160px;
  }
 .sidenav-{
  width: 20px;
 }
 .sidenavtext{
margin-top: 13px;
margin-left: 20px;

 }
.newIcon {
  margin: 3px;
  padding: 8px;
  position: relative;
  border: none;
  width: 53px;
  background: #f1f3f4;
  cursor: pointer;
}
  
.sea {
  column-width: 510px;
  overflow: hidden;
}


  
  .example-is-mobile .example-toolbar {
    position: fixed;
    /* Make sure the toolbar will stay on top of the content as it scrolls past. */
    z-index: 2;
  }
  
  h1.example-app-name {
    margin-left: 8px;
  }
  
  .example-sidenav-container {
    /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This
       causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */
    flex: 1;
  }
  
  .example-is-mobile .example-sidenav-container {
    /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the
       `<body>` to be our scrolling element for mobile layouts. */
    flex: 1 0 auto;
  }